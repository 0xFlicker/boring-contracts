/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Enumerator,
  EnumeratorInterface,
} from "../../contracts/Enumerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "NonExistentOwnerToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721NotQuiteEnumerable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allTokensOwnedBy",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721NotQuiteEnumerable",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "allTokensOwnedBy",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721NotQuiteEnumerable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721NotQuiteEnumerable",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106a5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063647a2f15146100515780636b42bf2f1461007a578063a01844c21461009b578063f2f500d9146100ae575b600080fd5b61006461005f366004610489565b6100c1565b60405161007191906104c2565b60405180910390f35b61008d6100883660046104fa565b610145565b604051908152602001610071565b6100646100a936600461053b565b6101cb565b61008d6100bc36600461057d565b610378565b606061013e83846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561010057600080fd5b505afa158015610114573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013891906105c5565b846101cb565b9392505050565b60006101c384856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561018457600080fd5b505afa158015610198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bc91906105c5565b8585610378565b949350505050565b6040516370a0823160e01b81526001600160a01b0382811660048301526060916000918616906370a082319060240160206040518083038186803b15801561021257600080fd5b505afa158015610226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024a91906105c5565b90506000816001600160401b03811115610266576102666105de565b60405190808252806020026020018201604052801561028f578160200160208202803683370190505b5090506000805b8681101561036c576040516331a9108f60e11b8152600481018290526001600160a01b0380881691908a1690636352211e9060240160206040518083038186803b1580156102e357600080fd5b505afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b91906105f4565b6001600160a01b03161461032e5761035a565b8083838151811061034157610341610611565b6020908102919091010152816103568161063d565b9250505b806103648161063d565b915050610296565b50909695505050505050565b600081815b85811015610441576040516331a9108f60e11b8152600481018290526001600160a01b038087169190891690636352211e9060240160206040518083038186803b1580156103ca57600080fd5b505afa1580156103de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040291906105f4565b6001600160a01b0316146104155761042f565b816104235791506101c39050565b61042c82610658565b91505b806104398161063d565b91505061037d565b50604051631728fb4d60e31b81526001600160a01b03851660048201526024810184905260440160405180910390fd5b6001600160a01b038116811461048657600080fd5b50565b6000806040838503121561049c57600080fd5b82356104a781610471565b915060208301356104b781610471565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561036c578351835292840192918401916001016104de565b60008060006060848603121561050f57600080fd5b833561051a81610471565b9250602084013561052a81610471565b929592945050506040919091013590565b60008060006060848603121561055057600080fd5b833561055b81610471565b925060208401359150604084013561057281610471565b809150509250925092565b6000806000806080858703121561059357600080fd5b843561059e81610471565b93506020850135925060408501356105b581610471565b9396929550929360600135925050565b6000602082840312156105d757600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561060657600080fd5b815161013e81610471565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561065157610651610627565b5060010190565b60008161066757610667610627565b50600019019056fea26469706673582212200d7e540df5eaf4768cc26ecc9ad10de0c383f17d23245dc710dd3c09c55723a564736f6c63430008090033";

type EnumeratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnumeratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Enumerator__factory extends ContractFactory {
  constructor(...args: EnumeratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Enumerator> {
    return super.deploy(overrides || {}) as Promise<Enumerator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Enumerator {
    return super.attach(address) as Enumerator;
  }
  override connect(signer: Signer): Enumerator__factory {
    return super.connect(signer) as Enumerator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnumeratorInterface {
    return new utils.Interface(_abi) as EnumeratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Enumerator {
    return new Contract(address, _abi, signerOrProvider) as Enumerator;
  }
}
