/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721ACommon,
  ERC721ACommonInterface,
} from "../../../../../@divergencetech/ethier/contracts/erc721/ERC721ACommon";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aa338038062001aa383398101604081905262000034916200024f565b8151829082906200004d906002906020850190620000dc565b50805162000063906003906020840190620000dc565b5050600080555062000075336200008a565b50506009805460ff60a01b19169055620002f6565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ea90620002b9565b90600052602060002090601f0160209004810192826200010e576000855562000159565b82601f106200012957805160ff191683800117855562000159565b8280016001018555821562000159579182015b82811115620001595782518255916020019190600101906200013c565b50620001679291506200016b565b5090565b5b808211156200016757600081556001016200016c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001aa57600080fd5b81516001600160401b0380821115620001c757620001c762000182565b604051601f8301601f19908116603f01168101908282118183101715620001f257620001f262000182565b816040528381526020925086838588010111156200020f57600080fd5b600091505b8382101562000233578582018301518183018401529082019062000214565b83821115620002455760008385830101525b9695505050505050565b600080604083850312156200026357600080fd5b82516001600160401b03808211156200027b57600080fd5b620002898683870162000198565b93506020850151915080821115620002a057600080fd5b50620002af8582860162000198565b9150509250929050565b600181811c90821680620002ce57607f821691505b60208210811415620002f057634e487b7160e01b600052602260045260246000fd5b50919050565b61179d80620003066000396000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c806301ffc9a71461010157806306fdde0314610129578063081812fc1461013e578063095ea7b31461015e57806318160ddd1461017357806323b872dd146101895780633f4ba83a1461019c57806342842e0e146101a45780635c975abb146101b75780636352211e146101bf57806370a08231146101d2578063715018a6146101e55780638456cb59146101ed5780638da5cb5b146101f557806395d89b41146101fd578063a22cb46514610205578063b88d4fde14610218578063c87b56dd1461022b578063e985e9c51461023e578063f2fde38b14610251575b600080fd5b61011461010f3660046112b2565b610264565b60405190151581526020015b60405180910390f35b610131610275565b6040516101209190611327565b61015161014c36600461133a565b610307565b6040516101209190611353565b61017161016c36600461137c565b61034b565b005b600154600054035b604051908152602001610120565b6101716101973660046113a8565b6103d9565b6101716103e4565b6101716101b23660046113a8565b610426565b610114610441565b6101516101cd36600461133a565b610451565b61017b6101e03660046113e9565b610463565b6101716104b1565b6101716104ea565b610151610521565b610131610530565b610171610213366004611406565b61053f565b61017161022636600461145a565b6105f3565b61013161023936600461133a565b610644565b61011461024c366004611539565b6106d6565b61017161025f3660046113e9565b61074d565b600061026f826107ed565b92915050565b60606002805461028490611567565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611567565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b5050505050905090565b60006103128261083d565b61032f576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061035682610451565b9050806001600160a01b0316836001600160a01b0316141561038b5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906103ab57506103a981336106d6565b155b156103c9576040516367d9dca160e11b815260040160405180910390fd5b6103d4838383610868565b505050565b6103d48383836108c4565b336103ed610521565b6001600160a01b03161461041c5760405162461bcd60e51b8152600401610413906115a2565b60405180910390fd5b610424610abe565b565b6103d4838383604051806020016040528060008152506105f3565b600954600160a01b900460ff1690565b600061045c82610b50565b5192915050565b60006001600160a01b03821661048c576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b336104ba610521565b6001600160a01b0316146104e05760405162461bcd60e51b8152600401610413906115a2565b6104246000610c6a565b336104f3610521565b6001600160a01b0316146105195760405162461bcd60e51b8152600401610413906115a2565b610424610cbc565b6009546001600160a01b031690565b60606003805461028490611567565b3361054981610d3f565b6001600160a01b0316836001600160a01b031614156105e9578161056e576001610571565b60005b6001600160a01b0382166000908152600860205260409020805460ff1916600183818111156105a2576105a26115d7565b0217905550826001600160a01b0316816001600160a01b0316600080516020611748833981519152846040516105dc911515815260200190565b60405180910390a3505050565b6103d48383610eb0565b6105fe8484846108c4565b6001600160a01b0383163b15158015610620575061061e84848484610f34565b155b1561063e576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061064f8261083d565b61066c57604051630a14c4b560e41b815260040160405180910390fd5b600061068360408051602081019091526000815290565b90508051600014156106a457604051806020016040528060008152506106cf565b806106ae8461102b565b6040516020016106bf9291906115ed565b6040516020818303038152906040525b9392505050565b6001600160a01b03808316600090815260076020908152604080832093851683529290529081205460ff161561070e5750600161026f565b6001600160a01b03831660009081526008602052604081205460ff16600181111561073b5761073b6115d7565b1480156106cf57506106cf8383611128565b33610756610521565b6001600160a01b03161461077c5760405162461bcd60e51b8152600401610413906115a2565b6001600160a01b0381166107e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610413565b6107ea81610c6a565b50565b60006001600160e01b031982166380ac58cd60e01b148061081e57506001600160e01b03198216635b5e139f60e01b145b8061026f57506301ffc9a760e01b6001600160e01b031983161461026f565b600080548210801561026f575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006108cf82610b50565b9050836001600160a01b031681600001516001600160a01b0316146109065760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480610924575061092485336106d6565b8061093f57503361093484610307565b6001600160a01b0316145b90508061095f57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661098657604051633a954ecd60e21b815260040160405180910390fd5b6109938585856001611166565b61099f60008487610868565b6001600160a01b03858116600090815260056020908152604080832080546001600160401b03198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116610a72576000548214610a7257805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b610ac6610441565b610b095760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610413565b6009805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610b469190611353565b60405180910390a1565b604080516060810182526000808252602082018190529181019190915281600054811015610c5157600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290610c4f5780516001600160a01b031615610be6579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215610c4a579392505050565b610be6565b505b604051636f96cda160e11b815260040160405180910390fd5b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610cc4610441565b15610d045760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610413565b6009805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b393390565b600080468060018114610d745760898114610d905760048114610dac57620138818114610dc8576105398114610de457610dfc565b73a5409ec958c83c3f309868babaca7c86dcb077c19250610dfc565b7358807bad0b376efc12f5ad86aac70e78ed67deae9250610dfc565b73f57b2c51ded3a29e6891aba85459d600256cf3179250610dfc565b73ff7ca10af37178bdd056628ef42fd7f799fac77c9250610dfc565b73e1a2bbc877b29adbc56d2659dbcb0ae14ee6207192505b506001600160a01b0382161580610e135750806089145b80610e2057508062013881145b15610e2c575092915050565b60405163c455279160e01b81526001600160a01b0383169063c455279190610e58908790600401611353565b60206040518083038186803b158015610e7057600080fd5b505afa158015610e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea8919061161c565b949350505050565b6001600160a01b038216331415610eda5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff19168615159081179091559051908152919291600080516020611748833981519152910160405180910390a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610f69903390899088908890600401611639565b602060405180830381600087803b158015610f8357600080fd5b505af1925050508015610fb3575060408051601f3d908101601f19168201909252610fb091810190611676565b60015b61100e573d808015610fe1576040519150601f19603f3d011682016040523d82523d6000602084013e610fe6565b606091505b508051611006576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60608161104f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110795780611063816116a9565b91506110729050600a836116da565b9150611053565b6000816001600160401b0381111561109357611093611444565b6040519080825280601f01601f1916602001820160405280156110bd576020820181803683370190505b5090505b8415610ea8576110d26001836116ee565b91506110df600a86611705565b6110ea906030611719565b60f81b8183815181106110ff576110ff611731565b60200101906001600160f81b031916908160001a905350611121600a866116da565b94506110c1565b60008061113484610d3f565b90506001600160a01b03811615801590610ea85750826001600160a01b0316816001600160a01b031614949350505050565b61116e610441565b156111b35760405162461bcd60e51b8152602060048201526015602482015274115490cdcc8c5050dbdb5b5bdb8e881c185d5cd959605a1b6044820152606401610413565b61063e848484846001600160a01b03831615806111fc575060016001600160a01b03841660009081526008602052604090205460ff1660018111156111fa576111fa6115d7565b145b156112065761063e565b600061121184610d3f565b90506001600160a01b03811661124a57506001600160a01b0383166000908152600860205260409020805460ff1916600117905561063e565b61125384610463565b610ab757806001600160a01b0316846001600160a01b0316600080516020611748833981519152600160405161128d911515815260200190565b60405180910390a35050505050565b6001600160e01b0319811681146107ea57600080fd5b6000602082840312156112c457600080fd5b81356106cf8161129c565b60005b838110156112ea5781810151838201526020016112d2565b8381111561063e5750506000910152565b600081518084526113138160208601602086016112cf565b601f01601f19169290920160200192915050565b6020815260006106cf60208301846112fb565b60006020828403121561134c57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b03811681146107ea57600080fd5b6000806040838503121561138f57600080fd5b823561139a81611367565b946020939093013593505050565b6000806000606084860312156113bd57600080fd5b83356113c881611367565b925060208401356113d881611367565b929592945050506040919091013590565b6000602082840312156113fb57600080fd5b81356106cf81611367565b6000806040838503121561141957600080fd5b823561142481611367565b91506020830135801515811461143957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561147057600080fd5b843561147b81611367565b9350602085013561148b81611367565b92506040850135915060608501356001600160401b03808211156114ae57600080fd5b818701915087601f8301126114c257600080fd5b8135818111156114d4576114d4611444565b604051601f8201601f19908116603f011681019083821181831017156114fc576114fc611444565b816040528281528a602084870101111561151557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561154c57600080fd5b823561155781611367565b9150602083013561143981611367565b600181811c9082168061157b57607f821691505b6020821081141561159c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600083516115ff8184602088016112cf565b8351908301906116138183602088016112cf565b01949350505050565b60006020828403121561162e57600080fd5b81516106cf81611367565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061166c908301846112fb565b9695505050505050565b60006020828403121561168857600080fd5b81516106cf8161129c565b634e487b7160e01b600052601160045260246000fd5b60006000198214156116bd576116bd611693565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826116e9576116e96116c4565b500490565b60008282101561170057611700611693565b500390565b600082611714576117146116c4565b500690565b6000821982111561172c5761172c611693565b500190565b634e487b7160e01b600052603260045260246000fdfe17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31a2646970667358221220535d46eaa3cd3ae13af72e5fefc67541985488116b5cb4bea0165d7967bf8c0f64736f6c63430008090033";

type ERC721ACommonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ACommonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ACommon__factory extends ContractFactory {
  constructor(...args: ERC721ACommonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721ACommon> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC721ACommon>;
  }
  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721ACommon {
    return super.attach(address) as ERC721ACommon;
  }
  override connect(signer: Signer): ERC721ACommon__factory {
    return super.connect(signer) as ERC721ACommon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ACommonInterface {
    return new utils.Interface(_abi) as ERC721ACommonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ACommon {
    return new Contract(address, _abi, signerOrProvider) as ERC721ACommon;
  }
}
