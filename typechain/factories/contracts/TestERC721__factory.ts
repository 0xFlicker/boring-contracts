/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC721,
  TestERC721Interface,
} from "../../contracts/TestERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BATCH_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "updateSignerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingContract",
        type: "address",
      },
    ],
    name: "updateStakingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "rarityWeight",
        type: "uint256[]",
      },
    ],
    name: "validateBatchSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "signature",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "rarityWeight",
        type: "uint256[]",
      },
    ],
    name: "validateMultiSignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rarityWeight",
        type: "uint256",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b4138038062002b41833981016040819052620000349162000237565b604080518082018252600481526315195cdd60e21b6020808301918252835180850190945260038452621514d560ea1b9084015281519192916200007b916000916200015e565b508051620000919060019060208401906200015e565b505050620000ae620000a86200010860201b60201c565b6200010c565b600d80546001600160a01b0319166001600160a01b0384161790558251620000de90600c9060208601906200015e565b50600e80546001600160a01b0319166001600160a01b039290921691909117905550620003779050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200016c906200033a565b90600052602060002090601f016020900481019282620001905760008555620001db565b82601f10620001ab57805160ff1916838001178555620001db565b82800160010185558215620001db579182015b82811115620001db578251825591602001919060010190620001be565b50620001e9929150620001ed565b5090565b5b80821115620001e95760008155600101620001ee565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200023257600080fd5b919050565b6000806000606084860312156200024d57600080fd5b83516001600160401b03808211156200026557600080fd5b818601915086601f8301126200027a57600080fd5b8151818111156200028f576200028f62000204565b604051601f8201601f19908116603f01168101908382118183101715620002ba57620002ba62000204565b81604052828152602093508984848701011115620002d757600080fd5b600091505b82821015620002fb5784820184015181830185015290830190620002dc565b828211156200030d5760008484830101525b96506200031f9150508682016200021a565b9350505062000331604085016200021a565b90509250925092565b600181811c908216806200034f57607f821691505b602082108114156200037157634e487b7160e01b600052602260045260246000fd5b50919050565b6127ba80620003876000396000f3fe6080604052600436106101475760003560e01c806301ffc9a71461014c57806306fdde0314610181578063081812fc146101a35780630825e367146101db578063095ea7b3146101fb5780630b1b72601461021d57806318160ddd1461023d57806323b872dd1461025c5780632f745c591461027c5780633347e4d61461029c57806342842e0e146102bc5780634f6ccce7146102dc57806355f804b3146102fc5780636352211e1461031c5780636a6278421461033c57806370a082311461034f578063715018a61461036f5780637e435946146103845780638da5cb5b146103a45780638fa2a9f0146103b95780639559c0bd146103d957806395d89b41146103ee5780639f181b5e14610403578063a22cb46514610418578063b88d4fde14610438578063c87b56dd14610458578063e985e9c514610478578063f2fde38b14610498575b600080fd5b34801561015857600080fd5b5061016c610167366004611e0c565b6104b8565b60405190151581526020015b60405180910390f35b34801561018d57600080fd5b506101966104e3565b6040516101789190611e81565b3480156101af57600080fd5b506101c36101be366004611e94565b610575565b6040516001600160a01b039091168152602001610178565b3480156101e757600080fd5b5061016c6101f6366004611fde565b610602565b34801561020757600080fd5b5061021b61021636600461207f565b610723565b005b34801561022957600080fd5b5061016c610238366004612120565b610834565b34801561024957600080fd5b506008545b604051908152602001610178565b34801561026857600080fd5b5061021b61027736600461222b565b61098b565b34801561028857600080fd5b5061024e61029736600461207f565b6109bc565b3480156102a857600080fd5b5061021b6102b7366004612267565b610a52565b3480156102c857600080fd5b5061021b6102d736600461222b565b610aa3565b3480156102e857600080fd5b5061024e6102f7366004611e94565b610abe565b34801561030857600080fd5b5061021b610317366004612282565b610b51565b34801561032857600080fd5b506101c3610337366004611e94565b610b97565b61024e61034a366004612267565b610c0e565b34801561035b57600080fd5b5061024e61036a366004612267565b610c35565b34801561037b57600080fd5b5061021b610cbc565b34801561039057600080fd5b5061016c61039f3660046122ca565b610cf7565b3480156103b057600080fd5b506101c3610d3e565b3480156103c557600080fd5b5061021b6103d4366004612267565b610d4d565b3480156103e557600080fd5b5061024e601481565b3480156103fa57600080fd5b50610196610d9e565b34801561040f57600080fd5b5061024e610dad565b34801561042457600080fd5b5061021b61043336600461232f565b610dbd565b34801561044457600080fd5b5061021b61045336600461236b565b610dc8565b34801561046457600080fd5b50610196610473366004611e94565b610e00565b34801561048457600080fd5b5061016c6104933660046123c6565b610ecb565b3480156104a457600080fd5b5061021b6104b3366004612267565b610ef9565b60006001600160e01b0319821663780e9d6360e01b14806104dd57506104dd82610f99565b92915050565b6060600080546104f2906123f9565b80601f016020809104026020016040519081016040528092919081815260200182805461051e906123f9565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b5050505050905090565b600061058082610fe9565b6105e65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600e546000906001600160a01b038581169116146106325760405162461bcd60e51b81526004016105dd90612434565b81518351146106535760405162461bcd60e51b81526004016105dd90612456565b600084848460405160200161066a939291906124ac565b604051602081830303815290604052805190602001209050600061068d82611006565b905060006106d1828a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061105892505050565b90506001600160a01b038116158015906106f85750600d546001600160a01b038281169116145b6107145760405162461bcd60e51b81526004016105dd906124de565b50600198975050505050505050565b600061072e82610b97565b9050806001600160a01b0316836001600160a01b0316141561079c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105dd565b336001600160a01b03821614806107b857506107b88133610ecb565b6108255760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b60648201526084016105dd565b61082f838361107c565b505050565b600e546000906001600160a01b038581169116146108645760405162461bcd60e51b81526004016105dd90612434565b81518351146108855760405162461bcd60e51b81526004016105dd90612456565b60005b835181101561097d576000858583815181106108a6576108a66124fe565b60200260200101518584815181106108c0576108c06124fe565b60200260200101516040516020016108da93929190612514565b60405160208183030381529060405280519060200120905060006108fd82611006565b90506000610924828a8681518110610917576109176124fe565b6020026020010151611058565b90506001600160a01b0381161580159061094b5750600d546001600160a01b038281169116145b6109675760405162461bcd60e51b81526004016105dd906124de565b50505080806109759061254f565b915050610888565b50600190505b949350505050565b61099533826110ea565b6109b15760405162461bcd60e51b81526004016105dd9061256a565b61082f8383836111ac565b60006109c783610c35565b8210610a295760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016105dd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b33610a5b610d3e565b6001600160a01b031614610a815760405162461bcd60e51b81526004016105dd906125bb565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b61082f83838360405180602001604052806000815250610dc8565b6000610ac960085490565b8210610b2c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016105dd565b60088281548110610b3f57610b3f6124fe565b90600052602060002001549050919050565b33610b5a610d3e565b6001600160a01b031614610b805760405162461bcd60e51b81526004016105dd906125bb565b8051610b9390600c906020840190611d5d565b5050565b6000818152600260205260408120546001600160a01b0316806104dd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105dd565b6000610c1e600b80546001019055565b6000610c29600b5490565b90506104dd8382611341565b60006001600160a01b038216610ca05760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105dd565b506001600160a01b031660009081526003602052604090205490565b33610cc5610d3e565b6001600160a01b031614610ceb5760405162461bcd60e51b81526004016105dd906125bb565b610cf5600061146d565b565b600e546000906001600160a01b03858116911614610d275760405162461bcd60e51b81526004016105dd90612434565b600084848460405160200161066a93929190612514565b600a546001600160a01b031690565b33610d56610d3e565b6001600160a01b031614610d7c5760405162461bcd60e51b81526004016105dd906125bb565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600180546104f2906123f9565b6000610db8600b5490565b905090565b610b933383836114bf565b610dd233836110ea565b610dee5760405162461bcd60e51b81526004016105dd9061256a565b610dfa8484848461158a565b50505050565b6060610e0b82610fe9565b610e6f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105dd565b6000610e796115bd565b90506000815111610e995760405180602001604052806000815250610ec4565b80610ea3846115cc565b604051602001610eb49291906125f0565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b33610f02610d3e565b6001600160a01b031614610f285760405162461bcd60e51b81526004016105dd906125bb565b6001600160a01b038116610f8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105dd565b610f968161146d565b50565b60006001600160e01b031982166380ac58cd60e01b1480610fca57506001600160e01b03198216635b5e139f60e01b145b806104dd57506301ffc9a760e01b6001600160e01b03198316146104dd565b6000908152600260205260409020546001600160a01b0316151590565b6040517b0ca2ba3432b932bab69029b4b3b732b21026b2b9b9b0b3b29d05199960211b6020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b600080600061106785856116c9565b9150915061107481611739565b509392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110b182610b97565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006110f582610fe9565b6111565760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105dd565b600061116183610b97565b9050806001600160a01b0316846001600160a01b0316148061119c5750836001600160a01b031661119184610575565b6001600160a01b0316145b8061098357506109838185610ecb565b826001600160a01b03166111bf82610b97565b6001600160a01b0316146112235760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016105dd565b6001600160a01b0382166112855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105dd565b6112908383836118ef565b61129b60008261107c565b6001600160a01b03831660009081526003602052604081208054600192906112c490849061261f565b90915550506001600160a01b03821660009081526003602052604081208054600192906112f2908490612636565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03868116918217909255915184939187169160008051602061276583398151915291a4505050565b6001600160a01b0382166113975760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105dd565b6113a081610fe9565b156113ec5760405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b60448201526064016105dd565b6113f8600083836118ef565b6001600160a01b0382166000908152600360205260408120805460019290611421908490612636565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051839290600080516020612765833981519152908290a45050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561151d5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b60448201526064016105dd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6115958484846111ac565b6115a1848484846119a7565b610dfa5760405162461bcd60e51b81526004016105dd9061264e565b6060600c80546104f2906123f9565b6060816115f05750506040805180820190915260018152600360fc1b602082015290565b8160005b811561161a57806116048161254f565b91506116139050600a836126b6565b91506115f4565b6000816001600160401b0381111561163457611634611f0a565b6040519080825280601f01601f19166020018201604052801561165e576020820181803683370190505b5090505b84156109835761167360018361261f565b9150611680600a866126ca565b61168b906030612636565b60f81b8183815181106116a0576116a06124fe565b60200101906001600160f81b031916908160001a9053506116c2600a866126b6565b9450611662565b6000808251604114156117005760208301516040840151606085015160001a6116f487828585611ab1565b94509450505050611732565b82516040141561172a576020830151604084015161171f868383611b94565b935093505050611732565b506000905060025b9250929050565b600081600481111561174d5761174d6126de565b14156117565750565b600181600481111561176a5761176a6126de565b14156117b35760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016105dd565b60028160048111156117c7576117c76126de565b14156118155760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105dd565b6003816004811115611829576118296126de565b14156118825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105dd565b6004816004811115611896576118966126de565b1415610f965760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105dd565b6001600160a01b03831661194a5761194581600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61196d565b816001600160a01b0316836001600160a01b03161461196d5761196d8382611bcd565b6001600160a01b0382166119845761082f81611c6a565b826001600160a01b0316826001600160a01b03161461082f5761082f8282611d19565b60006001600160a01b0384163b15611aa957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119eb9033908990889088906004016126f4565b602060405180830381600087803b158015611a0557600080fd5b505af1925050508015611a35575060408051601f3d908101601f19168201909252611a3291810190612731565b60015b611a8f573d808015611a63576040519150601f19603f3d011682016040523d82523d6000602084013e611a68565b606091505b508051611a875760405162461bcd60e51b81526004016105dd9061264e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610983565b506001610983565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115611ade5750600090506003611b8b565b8460ff16601b14158015611af657508460ff16601c14155b15611b075750600090506004611b8b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b5b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b8457600060019250925050611b8b565b9150600090505b94509492505050565b6000806001600160ff1b03831681611bb160ff86901c601b612636565b9050611bbf87828885611ab1565b935093505050935093915050565b60006001611bda84610c35565b611be4919061261f565b600083815260076020526040902054909150808214611c37576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611c7c9060019061261f565b60008381526009602052604081205460088054939450909284908110611ca457611ca46124fe565b906000526020600020015490508060088381548110611cc557611cc56124fe565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611cfd57611cfd61274e565b6001900381819060005260206000200160009055905550505050565b6000611d2483610c35565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611d69906123f9565b90600052602060002090601f016020900481019282611d8b5760008555611dd1565b82601f10611da457805160ff1916838001178555611dd1565b82800160010185558215611dd1579182015b82811115611dd1578251825591602001919060010190611db6565b50611ddd929150611de1565b5090565b5b80821115611ddd5760008155600101611de2565b6001600160e01b031981168114610f9657600080fd5b600060208284031215611e1e57600080fd5b8135610ec481611df6565b60005b83811015611e44578181015183820152602001611e2c565b83811115610dfa5750506000910152565b60008151808452611e6d816020860160208601611e29565b601f01601f19169290920160200192915050565b602081526000610ec46020830184611e55565b600060208284031215611ea657600080fd5b5035919050565b60008083601f840112611ebf57600080fd5b5081356001600160401b03811115611ed657600080fd5b60208301915083602082850101111561173257600080fd5b80356001600160a01b0381168114611f0557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611f4857611f48611f0a565b604052919050565b60006001600160401b03821115611f6957611f69611f0a565b5060051b60200190565b600082601f830112611f8457600080fd5b81356020611f99611f9483611f50565b611f20565b82815260059290921b84018101918181019086841115611fb857600080fd5b8286015b84811015611fd35780358352918301918301611fbc565b509695505050505050565b600080600080600060808688031215611ff657600080fd5b85356001600160401b038082111561200d57600080fd5b61201989838a01611ead565b909750955085915061202d60208901611eee565b9450604088013591508082111561204357600080fd5b61204f89838a01611f73565b9350606088013591508082111561206557600080fd5b5061207288828901611f73565b9150509295509295909350565b6000806040838503121561209257600080fd5b61209b83611eee565b946020939093013593505050565b60006001600160401b038311156120c2576120c2611f0a565b6120d5601f8401601f1916602001611f20565b90508281528383830111156120e957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261211157600080fd5b610ec4838335602085016120a9565b6000806000806080858703121561213657600080fd5b84356001600160401b038082111561214d57600080fd5b818701915087601f83011261216157600080fd5b81356020612171611f9483611f50565b82815260059290921b8401810191818101908b84111561219057600080fd5b8286015b848110156121c8578035868111156121ac5760008081fd5b6121ba8e86838b0101612100565b845250918301918301612194565b5098506121d89050898201611eee565b9650505060408701359150808211156121f057600080fd5b6121fc88838901611f73565b9350606087013591508082111561221257600080fd5b5061221f87828801611f73565b91505092959194509250565b60008060006060848603121561224057600080fd5b61224984611eee565b925061225760208501611eee565b9150604084013590509250925092565b60006020828403121561227957600080fd5b610ec482611eee565b60006020828403121561229457600080fd5b81356001600160401b038111156122aa57600080fd5b8201601f810184136122bb57600080fd5b610983848235602084016120a9565b6000806000806000608086880312156122e257600080fd5b85356001600160401b038111156122f857600080fd5b61230488828901611ead565b9096509450612317905060208701611eee565b94979396509394604081013594506060013592915050565b6000806040838503121561234257600080fd5b61234b83611eee565b91506020830135801515811461236057600080fd5b809150509250929050565b6000806000806080858703121561238157600080fd5b61238a85611eee565b935061239860208601611eee565b92506040850135915060608501356001600160401b038111156123ba57600080fd5b61221f87828801612100565b600080604083850312156123d957600080fd5b6123e283611eee565b91506123f060208401611eee565b90509250929050565b600181811c9082168061240d57607f821691505b6020821081141561242e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600890820152674241445354414b4560c01b604082015260600190565b6020808252600990820152680848288988a9c8ea8960bb1b604082015260600190565b60008151602080840160005b838110156124a157815187529582019590820190600101612485565b509495945050505050565b606084901b6001600160601b031916815260006124d56124cf6014840186612479565b84612479565b95945050505050565b60208082526006908201526542414453494760d01b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60609390931b6001600160601b03191683526014830191909152603482015260540190565b634e487b7160e01b600052601160045260246000fd5b600060001982141561256357612563612539565b5060010190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008351612602818460208801611e29565b835190830190612616818360208801611e29565b01949350505050565b60008282101561263157612631612539565b500390565b6000821982111561264957612649612539565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826126c5576126c56126a0565b500490565b6000826126d9576126d96126a0565b500690565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061272790830184611e55565b9695505050505050565b60006020828403121561274357600080fd5b8151610ec481611df6565b634e487b7160e01b600052603160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ac31a4ce2aee914fa48a03891b13199fc2fecec3e3ba580076a9f5dba08fa78864736f6c63430008090033";

type TestERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC721__factory extends ContractFactory {
  constructor(...args: TestERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    baseUri: string,
    signer: string,
    stakingContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC721> {
    return super.deploy(
      baseUri,
      signer,
      stakingContract,
      overrides || {}
    ) as Promise<TestERC721>;
  }
  override getDeployTransaction(
    baseUri: string,
    signer: string,
    stakingContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      baseUri,
      signer,
      stakingContract,
      overrides || {}
    );
  }
  override attach(address: string): TestERC721 {
    return super.attach(address) as TestERC721;
  }
  override connect(signer: Signer): TestERC721__factory {
    return super.connect(signer) as TestERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721Interface {
    return new utils.Interface(_abi) as TestERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721 {
    return new Contract(address, _abi, signerOrProvider) as TestERC721;
  }
}
