/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignerManager,
  SignerManagerInterface,
} from "../../../../../@divergencetech/ethier/contracts/crypto/SignerManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104df8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e316ab71461005c578063715018a6146100715780638da5cb5b14610079578063eb12d61e1461009d578063f2fde38b146100b0575b600080fd5b61006f61006a3660046103f3565b6100c3565b005b61006f61010a565b610081610145565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100ab3660046103f3565b610154565b61006f6100be3660046103f3565b61018e565b336100cc610145565b6001600160a01b0316146100fb5760405162461bcd60e51b81526004016100f290610423565b60405180910390fd5b61010660018261022e565b5050565b33610113610145565b6001600160a01b0316146101395760405162461bcd60e51b81526004016100f290610423565b610143600061024c565b565b6000546001600160a01b031690565b3361015d610145565b6001600160a01b0316146101835760405162461bcd60e51b81526004016100f290610423565b61010660018261029c565b33610197610145565b6001600160a01b0316146101bd5760405162461bcd60e51b81526004016100f290610423565b6001600160a01b0381166102225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b61022b8161024c565b50565b6000610243836001600160a01b0384166102b1565b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610243836001600160a01b0384166103a4565b6000818152600183016020526040812054801561039a5760006102d5600183610458565b85549091506000906102e990600190610458565b905081811461034e5760008660000182815481106103095761030961047d565b906000526020600020015490508087600001848154811061032c5761032c61047d565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061035f5761035f610493565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610246565b6000915050610246565b60008181526001830160205260408120546103eb57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610246565b506000610246565b60006020828403121561040557600080fd5b81356001600160a01b038116811461041c57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008282101561047857634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122047b363e7f97b1692cf6ecc780ad4177c3011d912c8b2d9413fae0dd731b3669d64736f6c63430008090033";

type SignerManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignerManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignerManager__factory extends ContractFactory {
  constructor(...args: SignerManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignerManager> {
    return super.deploy(overrides || {}) as Promise<SignerManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SignerManager {
    return super.attach(address) as SignerManager;
  }
  override connect(signer: Signer): SignerManager__factory {
    return super.connect(signer) as SignerManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignerManagerInterface {
    return new utils.Interface(_abi) as SignerManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignerManager {
    return new Contract(address, _abi, signerOrProvider) as SignerManager;
  }
}
