/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingSimple,
  StakingSimpleInterface,
} from "../../contracts/StakingSimple";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_setBaseNFTContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_setSingnerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "WithdrawStuckERC721",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCELERATED_YIELD_DAYS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ACCELERATED_YIELD_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_IN_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceleratedYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseNFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "tokenIds",
        type: "uint16[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "tokenIds",
        type: "uint16[]",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getAccumulatedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getCurrentReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStakerTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "getStakerYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenId",
        type: "uint16",
      },
    ],
    name: "getTokenYield",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "launchStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "tokenId",
        type: "uint16",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_pause",
        type: "bool",
      },
    ],
    name: "pauseDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "tokenIds",
        type: "uint16[]",
      },
      {
        internalType: "uint256[]",
        name: "rarityWeight",
        type: "uint256[]",
      },
    ],
    name: "setTokensValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_weightsAddress",
        type: "address",
      },
    ],
    name: "setWeights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingLaunched",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yield",
        type: "uint256",
      },
    ],
    name: "updateBaseYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
    ],
    name: "updateSignerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weightsAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16[]",
        name: "tokenIds",
        type: "uint16[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d3738038062001d378339810160408190526200003491620000ef565b6200003f3362000082565b60018055600280546001600160a01b039384166001600160a01b031991821617909155685150ae84a8cdf000006006556004805492909316911617905562000127565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ea57600080fd5b919050565b600080604083850312156200010357600080fd5b6200010e83620000d2565b91506200011e60208401620000d2565b90509250929050565b611c0080620001376000396000f3fe608060405234801561001057600080fd5b506004361061015f5760003560e01c806302befd2414610164578063041296671461018d578063081bc3f1146101ae57806309828c9f146101c3578063150b7a02146101cc5780631db2b99d1461021d5780631f68f20a146102305780632161a2b6146102395780633c84ebc914610259578063415855d61461026c5780634bee21d41461027f5780634d307e3f146102a85780635aa714c6146102bb5780635b7633d0146102ce57806361a52a36146102f9578063687fff2214610303578063715018a6146103165780637486560d1461031e57806382a7cf1e146103265780638da5cb5b146103535780638fa2a9f01461035b5780639c20e73e1461036e578063a30a247414610381578063befb06b014610389578063c1c1ef981461031e578063d39f99fd1461039c578063e1af5698146103af578063f2fde38b146103c3578063f67eb810146103d6575b600080fd5b60055461017890600160a81b900460ff1681565b60405190151581526020015b60405180910390f35b6101a061019b36600461168e565b6103e9565b604051908152602001610184565b6101c16101bc36600461179d565b610420565b005b6101a060035481565b6102046101da3660046117d1565b7f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f95945050505050565b6040516001600160e01b03199091168152602001610184565b6101c161022b36600461179d565b610781565b6101a060065481565b61024c61024736600461168e565b610a04565b604051610184919061186f565b6101c16102673660046118b3565b610a73565b6101c161027a36600461196d565b610b78565b6101a061028d36600461168e565b6001600160a01b031660009081526007602052604090205490565b6101a06102b636600461168e565b610bc5565b6101c16102c936600461179d565b610d93565b6004546102e1906001600160a01b031681565b6040516001600160a01b039091168152602001610184565b6101a06201518081565b6002546102e1906001600160a01b031681565b6101c16110d8565b6101a0600281565b6102e161033436600461198f565b61ffff166000908152600860205260409020546001600160a01b031690565b6102e1611113565b6101c161036936600461168e565b611122565b6101a061037c36600461198f565b611173565b6101c161125e565b6101c161039736600461168e565b611321565b6101c16103aa3660046119aa565b611372565b60055461017890600160a01b900460ff1681565b6101c16103d136600461168e565b6113a6565b6005546102e1906001600160a01b031681565b60006103f482610bc5565b6001600160a01b03831660009081526007602052604090206001015461041a91906119d9565b92915050565b6002600154141561044c5760405162461bcd60e51b8152600401610443906119f1565b60405180910390fd5b60026001819055336000908152600760205260408120805492549092916001600160a01b03909116905b845181101561072057306001600160a01b0316826001600160a01b0316636352211e8784815181106104aa576104aa611a28565b60200260200101516040518263ffffffff1660e01b81526004016104ce9190611a3e565b60206040518083038186803b1580156104e657600080fd5b505afa1580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e9190611a4d565b6001600160a01b0316146105445760405162461bcd60e51b815260040161044390611a6a565b60006008600087848151811061055c5761055c611a28565b60209081029190910181015161ffff16825281019190915260400160002080546001600160a01b0319166001600160a01b03929092169190911790558354156105d35760006105c38683815181106105b6576105b6611a28565b6020026020010151611173565b90506105cf8185611a91565b9350505b61064c8460030180548060200260200160405190810160405280929190818152602001828054801561062457602002820191906000526020600020905b815481526020019060010190808311610610575b505050505086838151811061063b5761063b611a28565b602002602001015161ffff16611446565b8051610662916003870191602090910190611619565b508360030180548061067657610676611aa8565b60019003818190600052602060002001600090559055816001600160a01b03166342842e0e306106a33390565b8885815181106106b5576106b5611a28565b60200260200101516040518463ffffffff1660e01b81526004016106db93929190611abe565b600060405180830381600087803b1580156106f557600080fd5b505af1158015610709573d6000803e3d6000fd5b50505050808061071890611ae5565b915050610476565b50600383015461072f57600091505b61073833611570565b818355835160405133917f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9161076f918591611b00565b60405180910390a25050600180555050565b3361078a611113565b6001600160a01b0316146107b05760405162461bcd60e51b815260040161044390611b19565b6032815111156107f55760405162461bcd60e51b815260206004820152601060248201526f06a6040d2e640dac2f040e0cae440e8f60831b6044820152606401610443565b6107ff6001610b78565b6002546001600160a01b031660005b82518110156109ff5760006008600085848151811061082f5761082f611a28565b60209081029190910181015161ffff168252810191909152604001600020546001600160a01b03169050801580159061090d5750306001600160a01b0316836001600160a01b0316636352211e86858151811061088e5761088e611a28565b60200260200101516040518263ffffffff1660e01b81526004016108b29190611a3e565b60206040518083038186803b1580156108ca57600080fd5b505afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190611a4d565b6001600160a01b0316145b156109ec57826001600160a01b03166323b872dd308387868151811061093557610935611a28565b60200260200101516040518463ffffffff1660e01b815260040161095b93929190611abe565b600060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b5050505083828151811061099f5761099f611a28565b602002602001015161ffff16836001600160a01b0316826001600160a01b03167ffefe036cac4ee3a4aca074a81cbcc4376e1484693289078dbec149c890101d5b60405160405180910390a45b50806109f781611ae5565b91505061080e565b505050565b6001600160a01b038116600090815260076020908152604091829020600301805483518184028101840190945280845260609392830182828015610a6757602002820191906000526020600020905b815481526020019060010190808311610a53575b50505050509050919050565b33610a7c611113565b6001600160a01b031614610aa25760405162461bcd60e51b815260040161044390611b19565b60005b82518161ffff1610156109ff57818161ffff1681518110610ac857610ac8611a28565b6020026020010151600014158015610b06575068a2a15d09519be00000828261ffff1681518110610afb57610afb611a28565b602002602001015111155b15610b6657818161ffff1681518110610b2157610b21611a28565b602002602001015160096000858461ffff1681518110610b4357610b43611a28565b602002602001015161ffff1661ffff168152602001908152602001600020819055505b80610b7081611b4e565b915050610aa5565b33610b81611113565b6001600160a01b031614610ba75760405162461bcd60e51b815260040161044390611b19565b60058054911515600160a81b0260ff60a81b19909216919091179055565b6001600160a01b038116600090815260076020908152604080832081516080810183528154815260018201548185015260028201548184015260038201805484518187028101870190955280855286959294606086019390929190830182828015610c4f57602002820191906000526020600020905b815481526020019060010190808311610c3b575b5050505050815250509050806040015160001415610c705750600092915050565b6003548160400151108015610c86575060035442105b15610cc957805160408201516002916201518091610ca49042611a91565b610cae9190611b70565b610cb89190611b8f565b610cc29190611b70565b9392505050565b6003548160400151108015610cdf575060035442115b15610d6857600060026201518083600001518460400151600354610d039190611a91565b610d0d9190611b70565b610d179190611b8f565b610d219190611b70565b610d2b90826119d9565b82516003549192506201518091610d429042611a91565b610d4c9190611b70565b610d569190611b8f565b610d6090826119d9565b949350505050565b80516040820151620151809190610d7f9042611a91565b610d899190611b70565b610cc29190611b8f565b60026001541415610db65760405162461bcd60e51b8152600401610443906119f1565b6002600155600554600160a81b900460ff1615610e065760405162461bcd60e51b815260206004820152600e60248201526d11195c1bdcda5d081c185d5cd95960921b6044820152606401610443565b600554600160a01b900460ff16610e5d5760405162461bcd60e51b815260206004820152601b60248201527a14dd185ada5b99c81a5cc81b9bdd081b185d5b98da1959081e595d602a1b6044820152606401610443565b60025433600090815260076020526040812080546001600160a01b039093169290915b845181101561109757336001600160a01b0316846001600160a01b0316636352211e878481518110610eb457610eb4611a28565b60200260200101516040518263ffffffff1660e01b8152600401610ed89190611a3e565b60206040518083038186803b158015610ef057600080fd5b505afa158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f289190611a4d565b6001600160a01b031614610f4e5760405162461bcd60e51b815260040161044390611a6a565b6001600160a01b0384166342842e0e3330888581518110610f7157610f71611a28565b60200260200101516040518463ffffffff1660e01b8152600401610f9793929190611abe565b600060405180830381600087803b158015610fb157600080fd5b505af1158015610fc5573d6000803e3d6000fd5b50505050610fd03390565b60086000878481518110610fe657610fe6611a28565b602002602001015161ffff1661ffff16815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061103d8582815181106105b6576105b6611a28565b61104790836119d9565b91508260030185828151811061105f5761105f611a28565b602090810291909101810151825460018101845560009384529190922061ffff9092169101558061108f81611ae5565b915050610e80565b506110a133611570565b808255835160405133917f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629161076f918791611b00565b336110e1611113565b6001600160a01b0316146111075760405162461bcd60e51b815260040161044390611b19565b61111160006115c9565b565b6000546001600160a01b031690565b3361112b611113565b6001600160a01b0316146111515760405162461bcd60e51b815260040161044390611b19565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6005546000906001600160a01b03166111cc5760405162461bcd60e51b815260206004820152601b60248201527a15d95a59da1d1cc818dbdb9d1c9858dd081a5cc81b9bdd081cd95d602a1b6044820152606401610443565b6005546040516398bd741b60e01b81526000916001600160a01b0316906398bd741b906111fd908690600401611a3e565b60206040518083038186803b15801561121557600080fd5b505afa158015611229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124d9190611bb1565b90508061041a575060065492915050565b33611267611113565b6001600160a01b03161461128d5760405162461bcd60e51b815260040161044390611b19565b600554600160a01b900460ff16156112f15760405162461bcd60e51b815260206004820152602160248201527f5374616b696e6720686173206265656e206c61756e6368656420616c726561646044820152607960f81b6064820152608401610443565b6005805460ff60a01b1916600160a01b179055611312600262015180611b70565b61131c90426119d9565b600355565b3361132a611113565b6001600160a01b0316146113505760405162461bcd60e51b815260040161044390611b19565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b3361137b611113565b6001600160a01b0316146113a15760405162461bcd60e51b815260040161044390611b19565b600655565b336113af611113565b6001600160a01b0316146113d55760405162461bcd60e51b815260040161044390611b19565b6001600160a01b03811661143a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610443565b611443816115c9565b50565b6060600080600185516114599190611a91565b855190915060005b818110156114ae578587828151811061147c5761147c611a28565b6020026020010151141561149c576114958160016119d9565b93506114ae565b806114a681611ae5565b915050611461565b50826114fa5760405162461bcd60e51b815260206004820152601b60248201527a36b9b39739b2b73232b91034b9903737ba103a34329037bbb732b960291b6044820152606401610443565b611505600184611a91565b92508183146115665785828151811061152057611520611a28565b602002602001015186848151811061153a5761153a611a28565b6020026020010181815250508486838151811061155957611559611a28565b6020026020010181815250505b5093949350505050565b61157981610bc5565b6001600160a01b038216600090815260076020526040812060010180549091906115a49084906119d9565b90915550506001600160a01b0316600090815260076020526040902042600290910155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215611654579160200282015b82811115611654578251825591602001919060010190611639565b50611660929150611664565b5090565b5b808211156116605760008155600101611665565b6001600160a01b038116811461144357600080fd5b6000602082840312156116a057600080fd5b8135610cc281611679565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156116e9576116e96116ab565b604052919050565b60006001600160401b0382111561170a5761170a6116ab565b5060051b60200190565b803561ffff8116811461172657600080fd5b919050565b600082601f83011261173c57600080fd5b8135602061175161174c836116f1565b6116c1565b82815260059290921b8401810191818101908684111561177057600080fd5b8286015b848110156117925761178581611714565b8352918301918301611774565b509695505050505050565b6000602082840312156117af57600080fd5b81356001600160401b038111156117c557600080fd5b610d608482850161172b565b6000806000806000608086880312156117e957600080fd5b85356117f481611679565b9450602086013561180481611679565b93506040860135925060608601356001600160401b038082111561182757600080fd5b818801915088601f83011261183b57600080fd5b81358181111561184a57600080fd5b89602082850101111561185c57600080fd5b9699959850939650602001949392505050565b6020808252825182820181905260009190848201906040850190845b818110156118a75783518352928401929184019160010161188b565b50909695505050505050565b600080604083850312156118c657600080fd5b82356001600160401b03808211156118dd57600080fd5b6118e98683870161172b565b935060209150818501358181111561190057600080fd5b85019050601f8101861361191357600080fd5b803561192161174c826116f1565b81815260059190911b8201830190838101908883111561194057600080fd5b928401925b8284101561195e57833582529284019290840190611945565b80955050505050509250929050565b60006020828403121561197f57600080fd5b81358015158114610cc257600080fd5b6000602082840312156119a157600080fd5b610cc282611714565b6000602082840312156119bc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156119ec576119ec6119c3565b500190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b61ffff91909116815260200190565b600060208284031215611a5f57600080fd5b8151610cc281611679565b6020808252600d908201526c2737ba103a34329037bbb732b960991b604082015260600190565b600082821015611aa357611aa36119c3565b500390565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b03938416815291909216602082015261ffff909116604082015260600190565b6000600019821415611af957611af96119c3565b5060010190565b6001600160a01b03929092168252602082015260400190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600061ffff80831681811415611b6657611b666119c3565b6001019392505050565b6000816000190483118215151615611b8a57611b8a6119c3565b500290565b600082611bac57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611bc357600080fd5b505191905056fea2646970667358221220300d979d9ed2202f36ace880acd9e215ea33a5e5c4d9c7b6ed9612da61f4449764736f6c63430008090033";

type StakingSimpleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingSimpleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingSimple__factory extends ContractFactory {
  constructor(...args: StakingSimpleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _setBaseNFTContract: string,
    _setSingnerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingSimple> {
    return super.deploy(
      _setBaseNFTContract,
      _setSingnerAddress,
      overrides || {}
    ) as Promise<StakingSimple>;
  }
  override getDeployTransaction(
    _setBaseNFTContract: string,
    _setSingnerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _setBaseNFTContract,
      _setSingnerAddress,
      overrides || {}
    );
  }
  override attach(address: string): StakingSimple {
    return super.attach(address) as StakingSimple;
  }
  override connect(signer: Signer): StakingSimple__factory {
    return super.connect(signer) as StakingSimple__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingSimpleInterface {
    return new utils.Interface(_abi) as StakingSimpleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingSimple {
    return new Contract(address, _abi, signerOrProvider) as StakingSimple;
  }
}
